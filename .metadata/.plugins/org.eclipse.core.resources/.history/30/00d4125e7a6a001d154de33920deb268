package modele;
import java.util.Random;
import java.util.ArrayList;
import java.util.Collections;


public class Grille {
	
	int nLine;
	int nCol;
	String alphCol;
	private String[][] cases;  


	public Grille (String alphabet, int l, int c){
		this.nLine = l;
		this.nCol = c;
		this.alphCol = alphabet;
		this.cases = new String[nLine][nCol];
		for (int i= 0; i< nLine; i++) {
			for (int j=0; j< nCol; j++) {
				this.cases[i][j] = "  ";
			}
		}
	}

	public String getCase(String coord) {
		int x = this.stringToXY(coord)[0];
		int y = this.stringToXY(coord)[1];
		return this.cases[x][y];
	}
	
	public String[][] getCases() { return this.cases; }

	public void setCases(String[][] desCases) { this.cases = desCases; }

	public void setCase(String symbole, String coord) {
		int x = this.stringToXY(coord)[0];
		int y = this.stringToXY(coord)[1];
		this.cases[x][y] = symbole;
	}

	public int[] stringToXY(String coord) {
		char l = coord.charAt(0);
		int y = this.alphCol.indexOf(l);
		coord.substring(0,coord.length());
		int x = Integer.parseInt(coord.substring(1));
		int[] tuple = new int[]{x,y};
		return tuple; 
	}

	public String xyToString(int x, int y) {
		char l = this.alphCol.charAt(y);
		return Character.toString(l) + x;
	}

	public boolean estCaseVide(String coord) { return this.getCase(coord) == "  "; }

	public boolean estCaseVideTouchee(String coord) { return this.getCase(coord) == "tt"; }
	
	public boolean estCaseNavireTouchee(String coord) { return this.getCase(coord) == "xx"; }

	public boolean estCaseTouchee(String coord) { return this.getCase(coord) == "xx" || this.getCase(coord) == "tt"; }
	
	public boolean estCaseNavire(String coord) { return this.getCase(coord) != "  " && this.getCase(coord) != "tt"; }
	
	public int minXCasesNavire(Navire N) {
		ArrayList<Integer> xTab = new ArrayList<Integer>();
		for (String coord: N.getCasesNavire()) {
			int x = stringToXY(coord)[0];
			xTab.add(x);
		}
		return Collections.min(xTab);
	}
	
	public int minYCasesNavire(Navire N) {
		ArrayList<Integer> yTab = new ArrayList<Integer>();
		for (String coord: N.getCasesNavire()) {
			int y = stringToXY(coord)[1];
			yTab.add(y);
		}
		return Collections.min(yTab);
	}
	
	public String coinHautGauche() {
		for (int x = 0; x < this.nCol; x++) {
			for (int y = 0; y < this.nLine; y++) {
				String coord = this.xyToString(x, y);
				if (this.getCase(coord) == " ") {
					return coord;
				}
			}
		}
		return null;
	}
}





class Grille2 extends Grille {
	Grille2(String alpha, int l, int c) { 
		super(alpha, l, c); 
	}

	public String masquerCase(String coord) {
		if (this.estCaseVide(coord) == false && this.estCaseNavireTouchee(coord) == false && this.estCaseVideTouchee(coord) == false) { 
			return "  ";
		}
		return this.getCase(coord);
	}
}
